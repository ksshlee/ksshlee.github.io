I"<h2 id="그래프란">그래프란?</h2>

<ul>
  <li>그래프는 노드(Node,Vertex)와 간선(Edge,Arc)으로 나타내는 자료구조이다.</li>
</ul>

<p><img src="/assets/img/ds/graph/graph_1.png" alt="graph" /></p>

<ul>
  <li>그래프는 연결되어 있는 Node 간의 관계를 표현한 자료구조이다.</li>
</ul>

<blockquote>
  <p>Example</p>
  <ul>
    <li>지도, 지하철 노선도, 선수과목, 가족 관계도, 회사 관계도 등</li>
  </ul>
</blockquote>

<p><br /><br /></p>

<h2 id="그래프-용어">그래프 용어</h2>

<ul>
  <li><strong>정점</strong> : Node 혹은 Vertex</li>
  <li><strong>간선</strong> : Edge 혹은 Arc</li>
  <li><strong>인접 정점</strong> : 간선으로 연결되어 있는 주변 정점</li>
  <li><strong>정점의 차수</strong> : 무방향 그래프에서 1개의 정점에 인접한 정점의 수
    <ul>
      <li>모든 정점의 차수 = 간선 * 2</li>
    </ul>
  </li>
  <li><strong>진입 차수</strong> : 방향 그래프에서 다른 정점에서 오는 간선의 수</li>
  <li><strong>진출 차수</strong> : 방향 그래프에서 다른 정점으로 향하는 간선의 수</li>
</ul>

<p><br /><br /></p>

<h2 id="그래프의-특징">그래프의 특징</h2>

<ul>
  <li>node간의 여러개의 Edge가 존재할 수 있다.</li>
  <li>루트,부모-자식 관계의 개념이 없다.</li>
  <li>순회는 DFS,BFS로 이루어진다.</li>
  <li>순환, 혹은 비순환이다.</li>
</ul>

<p><br /><br /></p>

<h2 id="그래프-트리의-차이">그래프, 트리의 차이</h2>

<p><img src="/assets/img/ds/graph/graph_vs_tree.png" alt="graphvstree" /></p>

<p><br /><br /></p>

<h2 id="그래프의-종류">그래프의 종류</h2>

<h3 id="방향그래프-무방향-그래프-directed-graph-undirected-graph">방향그래프 무방향 그래프 (Directed Graph, Undirected Graph)</h3>

<p><img src="/assets/img/ds/graph/direct_undirect.png" alt="direct_undirect" /></p>

<ul>
  <li>무방향 그래프
    <ul>
      <li>두 노드간 양 방향으로 이동 가능</li>
      <li>두 노드를 각각 A,B라 했을때 (A,B)와 (B,A)는 <strong>같은</strong> 표현이다.</li>
    </ul>
  </li>
  <li>방향 그래프
    <ul>
      <li>두 노드간 한 방향으로 이동 가능</li>
      <li>두 노드를 각각 A,B라 했을때 (A,B)와 (B,A)는 <strong>다른</strong> 표현이다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h3 id="가중치-그래프weighted-graph">가중치 그래프(Weighted Graph)</h3>

<p><img src="/assets/img/ds/graph/weighted_graph.png" alt="weighted_graph" /></p>

<ul>
  <li>가중치 그래프
    <ul>
      <li>간선에 값이 할당된 그래프</li>
      <li>‘네트워크(Network)’라고도 불린다.</li>
      <li>출발지-목적지 에서의 신호등, 차량 정체 등에서 활용</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h3 id="완전-그래프complete-graph">완전 그래프(Complete Graph)</h3>

<p><img src="/assets/img/ds/graph/complete_graph.png" alt="complete_graph" /></p>

<ul>
  <li>모든 노드가 서로 연결되어 있는 그래프</li>
  <li>노드가 n이면 간선의 수 : n*(n-1)/2</li>
</ul>

<p><br /><br /></p>

<h2 id="그래프-구현">그래프 구현</h2>

<ul>
  <li>구현 자체는 너무 쉽다. linkedlist 혹은 array를 활용하여 연결된 리스트를 저장해주면 된다.</li>
</ul>

<p><img src="/assets/img/ds/graph/graph_2.png" alt="graph_2" /></p>

<ul>
  <li>위의 그래프를 파이썬의 dict을 이용하여 구현 해보겠다.</li>
</ul>

<blockquote>
  <p>Python</p>
  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="mi">0</span> <span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span> <span class="p">,</span> 
<span class="mi">1</span> <span class="p">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span> 
<span class="mi">2</span> <span class="p">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> 
<span class="mi">3</span> <span class="p">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span>
<span class="mi">4</span> <span class="p">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]}</span>
</code></pre></div>  </div>
</blockquote>

<p>정말 간단하게 구현 할 수 있다.</p>

<p><br /><br /></p>

<h2 id="그래프-탐색">그래프 탐색</h2>

<h3 id="깊이-우선-탐색-depth-first-searchdfs">깊이 우선 탐색 (Depth First Search(DFS))</h3>
<ul>
  <li>자세한 내용은 <a href="https://ksshlee.github.io/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/dfs_bfs/" target="_blank">여기를 참고</a></li>
</ul>

<p><br />
<br /></p>

<h3 id="너비-우선-탐색-breadth-first-searchbfs">너비 우선 탐색 (Breadth First Search(BFS))</h3>
<ul>
  <li>자세한 내용은 <a href="https://ksshlee.github.io/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/dfs_bfs/" target="_blank">여기를 참고</a></li>
</ul>

<p><br /><br /></p>

<h2 id="참고">참고</h2>

<p><a href="https://kamang-it.tistory.com/entry/AlgorithmData-StructureGraph%EA%B7%B8%EB%9E%98%ED%94%84%EC%9D%B4%EB%A1%A0%EA%B3%BC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B5%AC%ED%98%84">https://kamang-it.tistory.com/entry/AlgorithmData-StructureGraph%EA%B7%B8%EB%9E%98%ED%94%84%EC%9D%B4%EB%A1%A0%EA%B3%BC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B5%AC%ED%98%84</a></p>

<p><a href="https://www.zerocho.com/category/Algorithm/post/584b9033580277001862f16c">https://www.zerocho.com/category/Algorithm/post/584b9033580277001862f16c</a></p>

<p><a href="https://gmlwjd9405.github.io/2018/08/13/data-structure-graph.html">https://gmlwjd9405.github.io/2018/08/13/data-structure-graph.html</a></p>

<p><br /></p>

<p><strong>혹시 제가 잘못 알고 있거나 오타, 궁금한점 있으시면 댓글 남겨주시면 감사하겠습니다!</strong></p>
:ET