I"/!<h2 id="eclipse로-web-project-만들기">Eclipse로 web project 만들기</h2>

<ul>
  <li>우선 Eclipse를 실행 시켜보자</li>
</ul>

<p><img src="/assets/img/back_end/2019_12_28/eclipse_1.png" alt="eclipase" /></p>

<ul>
  <li>저 창을 닫고 Create a new project를 눌러준다.</li>
</ul>

<p><img src="/assets/img/back_end/2019_12_28/eclipse_2.png" alt="eclipase" /></p>

<ul>
  <li>여기서 Dynamic Web Project 선택</li>
</ul>

<p><img src="/assets/img/back_end/2019_12_28/eclipse_3.png" alt="eclipase" /></p>

<ul>
  <li>여기서 가장 중요한건 Target runtime에서 New Runtime을 설정해줘야 하는것이다. New Runtime을 눌러보자</li>
</ul>

<p><img src="/assets/img/back_end/2019_12_28/eclipse_4.png" alt="eclipase" /></p>

<ul>
  <li>그럼 이렇게 창이 뜨는데 설치한 Tomcat 버전에 맞게 체크 후 Next</li>
</ul>

<p><img src="/assets/img/back_end/2019_12_28/eclipse_5.png" alt="eclipase" /></p>

<ul>
  <li>
    <p>Browse로 저번에 설치해준 Tomcat의 directory 누른후 Open! 후 Finish</p>
  </li>
  <li>
    <p>프로젝트 이름은 자유롭게! 저는 first_web_project로 하겠습니다.</p>
  </li>
</ul>

<p><img src="/assets/img/back_end/2019_12_28/eclipse_6.png" alt="eclipase" /></p>

<ul>
  <li>새로운 프로젝트 생성 완료!</li>
</ul>

<p><br /><br /></p>

<h2 id="servlet-등록후-구동">Servlet 등록후 구동</h2>

<h3 id="servlet-이란">Servlet 이란?</h3>
<ul>
  <li>
    <p>url 요청을 처리하는 프로그램</p>
  </li>
  <li>
    <p>new 로 Servlet을 하나 생성한다.
<img src="/assets/img/back_end/2019_12_28/servlet_2.png" alt="servlet" /></p>
  </li>
  <li>
    <p>package 이름과 클래스 이름을 자유롭게 생성을 해준다. (단 Java Class 규칙에 의해서 대문자로 구분!)</p>
  </li>
</ul>

<p><img src="/assets/img/back_end/2019_12_28/java_web_1.png" alt="java_web" /></p>

<p>간단하게 설명하자면 doGet 메소드는 Get으로 오는 요청들을 받아주는 메소드고 doPost는 Post로 오는 요청들을 받아주는 메소드 이다. 그밖에도 doPut 등등 많지만 일단 지금은 doGet만 사용해보자.</p>

<h3 id="️http-메소드️">⭐️http 메소드⭐️</h3>

<ul>
  <li>GET
    <ul>
      <li>요청된 resource를 조회한다.</li>
    </ul>
  </li>
  <li>POST
    <ul>
      <li>요청된 resource를 새롭게 추가한다.</li>
    </ul>
  </li>
  <li>PUT
    <ul>
      <li>요청된 resource를 수정한다. (내용 갱신)</li>
    </ul>
  </li>
  <li>DELETE
    <ul>
      <li>요청된 resource를 삭제한다.</li>
    </ul>
  </li>
</ul>

<p><br /><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">examples</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.PrintWriter</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.annotation.WebServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="cm">/**
 * Servlet implementation class FirstTest
 */</span>
<span class="nd">@WebServlet</span><span class="o">(</span><span class="s">"/FirstTest"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FirstTest</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span> <span class="o">{</span>
	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="mi">1L</span><span class="o">;</span>
       
    <span class="cm">/**
     * @see HttpServlet#HttpServlet()
     */</span>
    <span class="kd">public</span> <span class="nf">FirstTest</span><span class="o">()</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">();</span>
        <span class="c1">// TODO Auto-generated constructor stub</span>
    <span class="o">}</span>

	<span class="cm">/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html;charset=UTF-8"</span><span class="o">);</span>
		<span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
		<span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"&lt;h1&gt;나는야 상혁!&lt;/h1&gt;"</span><span class="o">);</span>
	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

<p>간단하게 정리하자면 나는야 상혁! 이라는 내용을 h1으로 감싼 글을 response로 보내준다. 근데 이 내용은 html형식이고 UTF-8형태로 되어 있다. 라는 뜻!</p>

<p>실행은 FirstTest.java 에서 Run as 1 Run on Server로 실행을 한다.</p>

<p><img src="/assets/img/back_end/2019_12_28/error_1.png" alt="error" />
만약 이런 오류가 뜬다면 <a href="#error_1">여기</a>로 이동!</p>

<p><img src="/assets/img/back_end/2019_12_28/success_1.png" alt="success" /></p>

<p>이렇게 간단하게 정말 간단하게 eclipse와 tomcat을 연동해서 원하는 문자 웹사이트에 띄우기 성공!</p>

<p>다음 포스팅에선 이렇게 간단한거보단 조금 더 심화된 내용을 다뤄보자!</p>

<p><br /><br /></p>

<h2 id="요류-목록">요류 목록</h2>

<p><img src="/assets/img/back_end/2019_12_28/error_1.png" alt="error" /></p>

<p>오류 내용을 해석해보면 8080,8009 포트가 이미 사용중이다.. 라는 내용이다.</p>

<p><img src="/assets/img/back_end/2019_12_28/error_reason_1.png" alt="error_reason" /></p>

<p>보면 8080포트에서 저번에 설치한 톰캣이 구동중이다.. 그럼 localhost:8080에 접속해보자</p>

<p>해결 방법은 2가지가 있다.</p>

<ol>
  <li>톰캣 종료</li>
  <li>포트 변경</li>
</ol>

<p>우린 1번을 사용하여 해결 해 보겠다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">cd</span> <span class="o">~/</span><span class="n">apps</span><span class="o">/</span><span class="n">apache</span><span class="o">-</span><span class="n">tomcat</span><span class="o">-</span><span class="mf">9.0</span><span class="o">.</span><span class="mi">30</span><span class="o">/</span><span class="n">bin</span>
</code></pre></div></div>
<p>해당 디렉토리로 접속</p>

<p><img src="/assets/img/back_end/2019_12_28/to_shutdown.png" alt="shut_down" /></p>

<p>저기서 shutdown.sh 파일을 실행시켜주면 된다.</p>

<p>명령어는</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">./</span><span class="n">shutdown</span><span class="o">.</span><span class="na">sh</span>
</code></pre></div></div>

<p><img src="/assets/img/back_end/2019_12_28/shutdown_result.png" alt="shutdown_result" /></p>

<p>그러면 shutdown이 성공적으로 실행된것을 확인 할 수 있다.</p>

<p><br /><br /></p>

<p><strong>혹시 제가 잘못 알고 있거나 오타, 궁금한점 있으시면 댓글 남겨주시면 감사하겠습니다!</strong></p>
:ET